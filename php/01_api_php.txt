|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||-------------------------------------------------------------------------- APIREST EN PHP --------------------------------------------------------------------------|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||                                                                                                                                                                    |||
||| --  01. ENTORNO DE DESARROLLO                                                                                                                                      |||
||| --  02. ESTRUCTURA DEL PROYECTO                                                                                                                                    |||
||| --  03. BASE DE DATOS                                                                                                                                              |||
||| --  04. CÓDIGO DEL PROEYCTO                                                                                                                                        |||
|||                                                                                                                                                                    |||
||| --  ANEXOS: TENER EN CUENTA                                                                                                                                        |||
||| --          AX_01.  Subir el Proyecto a Github                                                                                                                     |||
||| --          AX_02.  Clonar un proyecto de Github                                                                                                                   |||
||| --          AX_03.  Puesta en Marcha del Proyecto                                                                                                                  |||
|||                                                                                                                                                                    |||
||| --  Bibliografía  https://angular.dev/tutorials                                                                                                                    |||
|||                   https://www.youtube.com/playlist?list=PLrAw40DbN0l2XNbdFx0GvoRdzsyqTsdmP                                                                         |||
|||                                                                                                                                                                    |||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||                                                                                                                                                                    |||
||| --  01. ENTORNO DE DESARROLLO                                                                                                                                      |||
||| --      01.01.  Instalar Visual Studio Code                                                                                                                        |||


|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||                                                                                                                                                    |||
||| -- 01. Creación de la APIREST en PHP      (backend)                                                                                                |||
||| -- 02. Consumo de la APIREST con ANGULAR  (frontend)                                                                                               |||
|||                                                                                                                                                    |||
||| -- AUTOR: INSTRUCTOR ALBEIRO RAMOS. SENA, 2025                                                                                                     |||
|||                                                                                                                                                    |||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||



|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||-------------------------------------------------------------------- 01. ENTORNO DE DESARROLLO ---------------------------------------------------------------------|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.01.  Instalar Visual Studio Code: --------------------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Descargar 'Visual Studio Code': https://code.visualstudio.com/download.

            02. Instalar Visual Studio Code.

                    ⦿   En el asistente de instalación dejar marcado:   ☑ 'Agregar PATH…'.                    

            03. Abrir Visual Studio Code.



|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||------------------------------------------------------------------- 02. ESTRUCTURA DEL PROYECTO --------------------------------------------------------------------|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

                                                                                                                                                      # C = Carpetas
                                                                                                                                                      # A = Archivos

              htdocs/                                    #   Carpeta de XAMPP donde se guardan los proyectos PHP
              └── proyecto/                              #   Carpeta raíz del proyecto
                  └── backend/                           #   Carpeta de la APIRESTFULL en PHP
                  │   ├── config/                        #   Carpeta que contiene las configuraciones.
                  │   │   └── DbConn.php                 #   Configuración de la conexión a la base de datos.
                  │   ├── controllers/                   #   Carpeta que contiene los controladores
                  │   │   └── Locations.php              #   Controlador de Locations (Entrada el Proyecto)
                  │   └── models/                        #   Carpeta que contiene los modelos
                  │       └── Location.php               #   Modelo de Datos de 'Location'
                  └── database/                          #   Carpeta de la APIRESTFULL en PHP
                      └── db.sql                         #   Modelo de Datos de 'Location'





|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||------------------------------------------------------------------------ 03. BASE DE DATOS -------------------------------------------------------------------------|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 03.01. Codificar la base de datos 'db.sql' --------------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01   CREATE DATABASE DB;
              02   USE DB;
              03 
              04   CREATE TABLE locations (
              05       id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
              06       name VARCHAR(255) NOT NULL,
              07       city VARCHAR(255) NOT NULL,
              08       state VARCHAR(20) NOT NULL,
              09       photo VARCHAR(255) NOT NULL,
              10       availableUnits INT NOT NULL,
              11       wifi BOOLEAN,
              12       laundry BOOLEAN
              13   );
              14 
              15   INSERT INTO locations (id, name, city, state, photo, availableUnits, wifi, laundry) VALUES
              16   (1, 'Acme Fresh Start Housing', 'Chicago', 'IL', 
              17   'https://angular.dev/assets/images/tutorials/common/bernard-hermant-CLKGGwIBTaY-unsplash.jpg', 4, true, true),
              18   (2, 'A113 Transitional Housing', 'Santa Monica', 'CA', 
              19   'https://angular.dev/assets/images/tutorials/common/brandon-griggs-wR11KBaB86U-unsplash.jpg', 0, false, true),
              20   (3, 'Warm Beds Housing Support', 'Juneau', 'AK', 
              21   'https://angular.dev/assets/images/tutorials/common/i-do-nothing-but-love-lAyXdl1-Wmc-unsplash.jpg', 1, false, false),
              22   (4, 'Homesteady Housing', 'Chicago', 'IL', 
              23   'https://angular.dev/assets/images/tutorials/common/ian-macdonald-W8z6aiwfi1E-unsplash.jpg', 1, true, false),
              24   (5, 'Happy Homes Group', 'Gary', 'IN', 
              25   'https://angular.dev/assets/images/tutorials/common/krzysztof-hepner-978RAXoXnH4-unsplash.jpg', 1, true, false),
              26   (6, 'Hopeful Apartment Group', 'Oakland', 'CA', 
              27   'https://angular.dev/assets/images/tutorials/common/r-architecture-JvQ0Q5IkeMM-unsplash.jpg', 2, true, true),
              28   (7, 'Seriously Safe Towns', 'Oakland', 'CA', 
              29   'https://angular.dev/assets/images/tutorials/common/phil-hearing-IYfp2Ixe9nM-unsplash.jpg', 5, true, true),
              30   (8, 'Hopeful Housing Solutions', 'Oakland', 
              31   'CA', 'https://angular.dev/assets/images/tutorials/common/r-architecture-GGupkreKwxA-unsplash.jpg', 2, true, true),
              32   (9, 'Seriously Safe Towns', 'Oakland', 'CA', 
              33   'https://angular.dev/assets/images/tutorials/common/saru-robert-9rP3mxf8qWI-unsplash.jpg', 10, false, false),
              34   (10, 'Capital Safe Towns', 'Portland', 'OR', 
              35   'https://angular.dev/assets/images/tutorials/common/webaliser-_TPTXZd9mOo-unsplash.jpg', 6, true, true);


                ┌ --------------------------------------------------------------------------------------------------------------------------------------- ┐
                |                                                                                                                                         |
                  EXPLICACIÓN:   
                    
                    ⦿   XXXXXXXXXXXXXXXXXXXXXXXXXXXXX.

                |---------------------------------------------------------------------------------------------------------------------------------------- |
                
                    A.   XXXXXXXXXXXXXXXXXXXXXXXXXXXXX.
                    B.   XXXXXXXXXXXXXXXXXXXXXXXXXXXXX.
                |                                                                                                                                         |
                └ --------------------------------------------------------------------------------------------------------------------------------------- ┘


|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||--------------------------------------------------------------------- 03. CÓDIGO DEL PROEYCTO ----------------------------------------------------------------------|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 03.01. Codificar el modelo de conexión 'config/DbConn.php' ------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <?php
              02          class DbConn{
              03              public static function connection(){
              04                  try {
              05                      $hostname = "localhost";
              06                      $port = "3306";
              07                      $database = "db";
              08                      $username = "root";
              09                      $password = "";
              10                      $pdo = new PDO("mysql:host=$hostname;port=$port;dbname=$database;charset=utf8",$username,$password);
              11                      $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
              12                      return $pdo;
              13                  } catch (Exception $e) {
              14                      print "¡Error BD!: "  $e->getMessage()  "<br/>";
              15                      die();
              16                  }
              17              }
              18          }
              19      ?>



|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.01. Estructura de carpetas -----------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              htdocs/                                    #   Carpeta de XAMPP donde se guardan los proyectos PHP
              └── proyecto/                              #   Carpeta raíz del proyecto
                  └── backend/                           #   Carpeta de la APIRESTFULL en PHP
                      ├── config/                        #   Carpeta que contiene las configuraciones.
                      │   └── DbConn.php                 #   Configuración de la conexión a la base de datos.
                      ├── controllers/                   #   Carpeta que contiene los controladores
                      │   └── Locations.php              #   Controlador de Locations (Entrada el Proyecto)
                      ├── models/                        #   Carpeta que contiene los modelos
                      │   └── Location.php               #   Modelo de Datos de 'Location'


              NOTA: Se debe crear la base de datos. Puede descargarla desde el siguiente enlace:

                    https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/db/db.sql


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.02. models/location.php -------------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01    <?php
              02        class Location {
              03            private $conn;
              04
              05            public function __construct() {
              06               $this->conn = DbConn::connection();
              07            }
              08
              09            public function getAllHousingLocations() {
              10                $stmt = $this->conn->query("SELECT * FROM locations");
              11                return $stmt->fetchAll(PDO::FETCH_ASSOC);
              12            }
              13
              14            public function getHousingLocationById($id) {
              15                $stmt = $this->conn->prepare("SELECT * FROM locations WHERE id = ?");
              16                $stmt->execute([$id]);
              17                return $stmt->fetch(PDO::FETCH_ASSOC);
              18            }
              19
              20            public function createHousingLocation($name, $city, $state, $photo, $availableUnits, $wifi, $laundry) {
              21                $stmt = $this->conn->prepare("INSERT INTO locations (name, city, state, photo, availableUnits, wifi, laundry)
              22                                                VALUES (?, ?, ?, ?, ?, ?, ?)");
              23                return $stmt->execute([$name, $city, $state, $photo, $availableUnits, $wifi, $laundry]);
              24            }
              25
              26            public function updateHousingLocation($id, $name, $city, $state, $photo, $availableUnits, $wifi, $laundry) {
              27                $stmt = $this->conn->prepare("UPDATE locations SET name = ?, city = ?, state = ?, photo = ?, availableUnits = ?,
              28                        wifi = ?, laundry = ? WHERE id = ?");
              29                return $stmt->execute([$name, $city, $state, $photo, $availableUnits, $wifi, $laundry, $id]);
              30            }
              31
              32            public function deleteHousingLocation($id) {
              33                $stmt = $this->conn->prepare("DELETE FROM locations WHERE id = ?");
              34                return $stmt->execute([$id]);
              35            }
              36        }
              37    ?>


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.03. config/DbConn.php ----------------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <?php
              02          class DbConn{
              03              public static function connection(){
              04                  try {
              05                      $hostname = "localhost";
              06                      $port = "3306";
              07                      $database = "db";
              08                      $username = "root";
              09                      $password = "";
              10                      $pdo = new PDO("mysql:host=$hostname;port=$port;dbname=$database;charset=utf8",$username,$password);
              11                      $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
              12                      return $pdo;
              13                  } catch (Exception $e) {
              14                      print "¡Error BD!: "  $e->getMessage()  "<br/>";
              15                      die();
              16                  }
              17              }
              18          }
              19      ?>


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01.04. controllers/Locations.php --------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <?php
              02          header("Access-Control-Allow-Origin: http://localhost:4200");
              03          header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
              04          header("Access-Control-Allow-Headers: Content-Type, Authorization");
              05          header('Content-Type: application/json');
              06
              07          require_once "../config/DbConn.php";
              08          require_once("../models/Location.php");
              09
              10          $location = new Location;
              11
              12          function sendResponse($code, $message, $data = null) {
              13              http_response_code($code);
              14              echo json_encode(['message' => $message, 'datos' => $data]);
              15              exit;
              16          }
              17
              18          $body = json_decode(file_get_contents("php://input"), true);
              19
              20          $method = $_SERVER['REQUEST_METHOD'];
              21
              22          switch ($method) {
              23              case 'GET':
              24                  if (isset($_GET['id'])) {
              25                      try {
              26                          $data = $location->getHousingLocationById($_GET['id']);
              27                          if ($data) {
              28                              sendResponse(200, "Ubicación de vivienda obtenida", $data);
              29                          } else {
              30                              sendResponse(404, "Ubicación de vivienda no encontrada");
              31                          }
              32                      } catch (Exception $e) {
              33                          sendResponse(500, "Error al obtener la vivienda: " . $e->getMessage());
              34                      }
              35                  } else {
              36                      try {
              37                          $data = $location->getAllHousingLocations();
              38                          sendResponse(200, "Viviendas y ubicación obtenidas", $data);
              39                      } catch (Exception $e) {
              40                          sendResponse(500, "Error al obtener viviendas y ubicación: " . $e->getMessage());
              41                      }
              42                  }
              43                  break;
              44
              45              case 'POST':
              46                  try {
              47                      if (empty($body['name']) ||
              48                          empty($body['city']) ||
              49                          empty($body['state']) ||
              50                          empty($body['photo']) ||
              51                          empty($body['availableUnits']) ||
              52                          !isset($body['wifi']) ||
              53                          !isset($body['laundry'])) {
              54                              sendResponse(400, "Datos de entrada inválidos");
              55                      }
              56                      $data = $location->createHousingLocation(
              57                                  $body['name'],
              58                                  $body['city'],
              59                                  $body['state'],
              60                                  $body['photo'],
              61                                  $body['availableUnits'],
              62                                  $body['wifi'],
              63                                  $body['laundry']);
              64                      sendResponse(201, "Vivienda  creada", $data);
              65                  } catch (Exception $e) {
              66                      sendResponse(500, "Error al crear la vivienda: " . $e->getMessage());
              67                  }
              68                  break;
              69
              70                case 'PUT':
              71                  try {
              72                      if (empty($body['id']) ||
              73                          empty($body['name']) ||
              74                          empty($body['city']) ||
              75                          empty($body['state']) ||
              76                          empty($body['photo']) ||
              77                          empty($body['availableUnits']) ||
              78                          !isset($body['wifi']) ||
              79                          !isset($body['laundry'])) {
              80                              sendResponse(400, "Datos de entrada inválidos");
              81                      }
              82
              83                      $data = $location->updateHousingLocation(
              84                                  $body['id'],
              85                                  $body['name'],
              86                                  $body['city'],
              87                                  $body['state'],
              88                                  $body['photo'],
              89                                  $body['availableUnits'],
              90                                  $body['wifi'],
              91                                  $body['laundry']);
              92                      sendResponse(200, "Vivienda y ubicación actualizada", $data);
              93                  } catch (Exception $e) {
              94                      sendResponse(500, "Error al actualizar vivienda y ubicación: " . $e->getMessage());
              95                  }
              96                  break;
              97
              98                  case 'DELETE':
              99                      try {
             100                          if (empty($body['id'])) {
             101                              sendResponse(400, "ID de vivienda inválido");
             102                          }
             103
             104                          $location->deleteHousingLocation($body['id']);
             105                          sendResponse(200, "Vivienda eliminada");
             106                      } catch (Exception $e) {
             107                          sendResponse(500, "Error al eliminar vivienda: " . $e->getMessage());
             108                      }
             109                      break;
             110
             111              default:
             112                  sendResponse(405, "Método no permitido");
             113                  break;
             114          }
             115      ?>


|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-------------------------------------------------------- 02. CONSUMO DE LA APIREST CON ANGULAR ---------------------------------------------------------|
|---------------------------------------------------------------------- (FRONTEND) ----------------------------------------------------------------------|
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.01. Estructura de carpetas -----------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              htdocs/
              └── proyecto/
                  └── backend/
                      ├── config/
                      │   └── DbConn.php
                      ├── controllers/
                      │   └── Locations.php
                      ├── models/
                      │   └── Location.php
                      frontend/
                      ├── public/                                                       #   Carpeta pública
                      │   └── assets                                                    #   Carpeta de archivos públicos (estáticos)
                      └── src/                                                          #   Carpeta de recursos de Angular
                          ├── app/                                                      #   Carpeta de la Aplicación de Angular
                          |   ├── components/                                           #   Carpeta de Componentes
                          |   │   ├── details/                                          #   Carpeta del Componente 'details'
                          |   │   │   ├── details.component.ts                          #   Componente 'details' que alimenta la vista HTML
                          |   │   │   └── details.component.html                        #   Vista del componente 'details' en HTML
                          |   │   ├── home/                                             #   Carpeta del Componente 'home'
                          |   │   │   ├── home.component.ts                             #   Componente 'home' que alimenta la vista HTML
                          |   │   │   └── home.component.html                           #   Vista del componente 'home' en HTML
                          |   │   └── housing-location/                                 #   Carpeta del Componente 'housing-location'
                          |   │       ├── housing-location.component.ts                 #   Componente 'housing-location' que alimenta la vista HTML
                          |   │       └── housing-location.component.html               #   Vista del componente 'housing-location' en HTML
                          |   └── services/                                             #   Carpeta de servicios
                          |   │   └── housing-location.service.ts                       #   Servicio 'housing-location'
                          |   └── interfaces/                                           #   Carpeta de Interfaces
                          |   │   └── housing-location.ts                               #   Interfaz 'housing-location'
                          |   └── app.component.html                                    #   Componente Principal (.html)
                          |   └── app.component.ts                                      #   Componente Principal (.ts)
                          |   └── app.routes.ts                                         #   Configuración de rutas
                          ├── styles.css                                                #   Estilos Globales
                          └── main.ts                                                   #   Inicio del proyecto Frontend


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.02. Crear el Proyecto de Angular en la carpeta raíz y arrancar el servidor -----------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.02.01. Desde la Terminal:

              PS C:\..> ng new frontend

              ❯ CSS             [ https://developer.mozilla.org/docs/Web/CSS                     ]
              ? Do you want to enable Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering)? (y/N) n

--- 02.02.02. Ingresar a la carpeta 'frontend' desde la Terminal:

              PS C:\..> cd frontend

--- 02.02.03. Ejecutar el Servidor desde la Terminal:

              PS C:\..\frontend> ng s -o

              (y/N) y


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.03. Crear las Interfaces, Servicios y Componentes ------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.03.01. Abrir otra Terminal e ingresar a la carpeta 'frontend':

              PS C:\..> cd frontend

--- 02.03.02. Cambiar el nombre de las Terminales. En la parte inferior derecha, seleccionar y presionar F2.

--- 02.03.03. Crear la interfaz, servicio y componente de 'housing-location'

              PS C:\..\frontend> ng g i interfaces/housing-location
              PS C:\..\frontend> ng g s services/housing-location
              PS C:\..\frontend> ng g c components/home
              PS C:\..\frontend> ng g c components/housing-location
              PS C:\..\frontend> ng g c components/details


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.04. Carpeta Pública: frontend/public/assets ------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.04.01. Crear en la carpeta 'frontend/public' la carpeta 'assets' y cargar las siguientes imágenes:

              https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/assets/location-pin.svg
              https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/assets/logo.svg


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.05. Estilos Globales: frontend/src/styles.css ----------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.05.01. Agregar los estilos globales al archivo 'styles.css', desde el siguiente enlace:

              https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/css/styles.css


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.06. Inicio: frontend/src/main.ts -----------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { bootstrapApplication } from '@angular/platform-browser';
              02      import { AppComponent } from './app/app.component';
              03      import { routes } from './app/app.routes';
              04      import { provideRouter } from '@angular/router';
              05      import { provideHttpClient } from '@angular/common/http';
              06
              07      bootstrapApplication(AppComponent, {
              08        providers: [provideHttpClient(), provideRouter(routes)]
              09      })
              10        .catch((err) => console.error(err));


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.06. Componente Principal (.ts): frontend/src/app/app.component.ts --------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { Component } from '@angular/core';
              02      import { RouterOutlet, RouterModule } from '@angular/router';
              03
              04      @Component({
              05        selector: 'app-root',
              06        imports: [RouterOutlet, RouterModule],
              07        templateUrl: './app.component.html',
              08        styleUrl: './app.component.css'
              09      })
              10      export class AppComponent {
              11        title = 'frontend';
              12      }


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.07. Componente Principal (.html): frontend/src/app/app.component.html ----------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <main class="main">
              02        <a routerLink="/">
              03          <header class="brand-home">
              04            <img class="brand-logo" src="assets/logo.svg" alt="logo" />
              05          </header>
              06        </a>
              07        <section class="content">
              08          <router-outlet />
              09        </section>
              10      </main>


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.08. Configuración de Rutas: frontend/src/app/app.routes.ts ---------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { Routes } from '@angular/router';
              02      import { HomeComponent } from './components/home/home.component';
              03      import { DetailsComponent } from './components/details/details.component';
              04
              05      export const routes: Routes = [
              06          {path:'', component: HomeComponent, title:'Home Page'},
              07          {path:'details/:id', component: DetailsComponent, title:'Home Details'}
              08      ];


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.09. Interfaz: frontend/src/app/interfaces/housing-location.ts ------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      export interface HousingLocation {
              02        id?: number;
              03        name: string;
              04        city: string;
              05        state: string;
              06        photo: string;
              07        availableUnits: number;
              08        wifi: boolean;
              09        laundry: boolean;
              10      }


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.10. Servicio: frontend/src/app/services/housing-location.service.ts ------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { Injectable } from '@angular/core';
              02      import { HousingLocation } from '../interfaces/housing-location';
              03
              04      @Injectable({
              05        providedIn: 'root'
              06      })
              07      export class HousingLocationService {
              08        url = 'http://localhost/api_php_angular/backend/controllers/Locations.php';
              09
              10        constructor() { }
              11
              12        async getAllHousingLocation(): Promise<HousingLocation[]> {
              13          try {
              14            const data = await fetch(this.url);
              15            if (!data.ok) {
              16              throw new Error(`Error HTTP: ${data.status}`);
              17            }
              18            const response = await data.json();
              19            return response.datos;
              20          } catch (error) {
              21            console.error('Error al obtener datos:', error);
              22            return [];
              23          }
              24        }
              25
              26        async getHousingLocationById(id: number): Promise<HousingLocation | undefined> {
              27          const url = `${this.url}/${id}`;
              28          console.log('URL de la API:', url);
              29          try {
              30            const data = await fetch(url);
              31            if (!data.ok) {
              32              throw new Error(`Error HTTP: ${data.status}`);
              33            }
              34            const response = await data.json();
              35            return response.datos.find((item: HousingLocation) => item.id === id);
              36          } catch (error) {
              37            console.error('Error al obtener datos:', error);
              38            return undefined;
              39          }
              40        }
              41
              42        submitApplication(firstName: string, lastName: string, email: string) {
              43          console.log(`FirstName: ${firstName} - LastName: ${lastName} - Email: ${email}`);
              44        }
              45      }


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.11. Componente 'home' (.ts): frontend/src/app/components/home/home.component.ts ------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { CommonModule } from '@angular/common';
              02      import { Component, inject } from '@angular/core';
              03      import { HousingLocation } from '../../interfaces/housing-location';
              04      import { HousingLocationService } from '../../services/housing-location.service';
              05      import { HousingLocationComponent } from '../housing-location/housing-location.component';
              06
              07      @Component({
              08        selector: 'app-home',
              09        imports: [CommonModule, HousingLocationComponent],
              10        templateUrl: './home.component.html',
              11        styleUrl: './home.component.css'
              12      })
              13      export class HomeComponent {
              14        housingLocationList: HousingLocation[] = [];
              15        housingService: HousingLocationService = inject(HousingLocationService);
              16        filteredLocationList: HousingLocation[] = [];
              17
              18        constructor(){
              19          this.housingService.getAllHousingLocation().then((housingLocationList: HousingLocation[]) => {
              20            this.housingLocationList = housingLocationList;
              21            this.filteredLocationList = housingLocationList;
              22          })
              23        }
              24
              25        filterResults(text:string){
              26          if (!text) {
              27            this.filteredLocationList = this.housingLocationList;
              28            return;
              29          }
              30          this.filteredLocationList = this.housingLocationList.filter((housingLocation) =>
              31            housingLocation?.city.toLowerCase().includes(text.toLowerCase())
              32          )
              33        }
              34      }


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.12. Componente 'home' (.css): frontend/src/app/components/home/home.component.css ----------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.12.01. Agregar los estilos del componente home al archivo 'home.component.css', desde el siguiente enlace:

              https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/css/home.component.css


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.13. Componente 'home' (.html): frontend/src/app/components/home/home.component.html --------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <section>
              02          <form>
              03              <input type="text" placeholder="Filter by city" #filter/>
              04              <button type="button" class="primary" (click)="filterResults(filter.value)" >Search</button>
              05          </form>
              06          <section class="results">
              07              <app-housing-location
              08                  *ngFor="let housingLocation of filteredLocationList"
              09                  [housingLocation]="housingLocation">
              10              </app-housing-location>
              11          </section>
              12      </section>


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.14. Componente 'housing-location' (.ts): frontend/src/app/components/housing-location/housing-location.component.ts ------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { CommonModule } from '@angular/common';
              02      import { Component, Input } from '@angular/core';
              03      import { RouterModule } from '@angular/router';
              04      import { HousingLocation } from '../../interfaces/housing-location';
              05
              06      @Component({
              07        selector: 'app-housing-location',
              08        imports: [RouterModule, CommonModule],
              09        templateUrl: './housing-location.component.html',
              10        styleUrl: './housing-location.component.css'
              11      })
              12      export class HousingLocationComponent {
              13        @Input() housingLocation!: HousingLocation;
              14      }


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.15. Componente 'housing-location' (.css): frontend/src/app/components/housing-location/housing-location.component.css ----------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.15.01. Agregar los estilos del componente housing-location al archivo 'housing-location.component.css', desde el siguiente enlace:

              https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/css/housing-location.component.css

|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.16. Componente 'housing-location' (.html): frontend/src/app/components/housing-location/housing-location.component.html --------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <section class="listing" *ngIf="housingLocation">
              02          <img
              03            class="listing-photo"
              04            [src]="housingLocation.photo"
              05            alt="Exterior photo of {{ housingLocation.name }}"
              06            crossorigin
              07          />
              08          <h2 class="listing-heading">{{ housingLocation.name }}</h2>
              09          <p class="listing-location">{{ housingLocation.city }}, {{ housingLocation.state }}</p>
              10          <a [routerLink]="['/locations', housingLocation.id]" routerLinkActive="router-link-active">Learn More</a>
              11      </section>


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.17. Componente 'details' (.ts): frontend/src/app/components/details/details.component.ts ---------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      import { CommonModule } from '@angular/common';
              02      import { Component, inject } from '@angular/core';
              03      import { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';
              04      import { ActivatedRoute } from '@angular/router';
              05      import { HousingLocation } from '../../interfaces/housing-location';
              06      import { HousingLocationService } from '../../services/housing-location.service';
              07
              08      @Component({
              09        selector: 'app-details',
              10        imports: [CommonModule, ReactiveFormsModule],
              11        templateUrl: './details.component.html',
              12        styleUrl: './details.component.css'
              13      })
              14      export class DetailsComponent {
              15        route: ActivatedRoute = inject(ActivatedRoute);
              16        housingService = inject(HousingLocationService);
              17        housingLocation: HousingLocation | undefined;
              18
              19        constructor(){
              20          const housingLocationId = parseInt(this.route.snapshot.params['id'], 10);
              21          this.housingService.getHousingLocationById(housingLocationId).then((housingLocation) => {
              22            this.housingLocation = housingLocation;
              23          })
              24        }
              25
              26        formAngular = new FormGroup({
              27          firstName: new FormControl(''),
              28          lastName: new FormControl(''),
              29          email: new FormControl(''),
              30        });
              31
              32        onSubmit(){
              33          this.housingService.submitApplication(
              34            this.formAngular.value.firstName ?? '',
              35            this.formAngular.value.lastName ?? '',
              36            this.formAngular.value.email ?? ''
              37          )
              38        }
              39      }


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.18. Componente 'details' (.css): frontend/src/app/components/details/details.component.css -------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.18.01. Agregar los estilos del componente details al archivo 'details.component.css', desde el siguiente enlace:

              https://github.com/ProfeAlbeiro/api_php_angular/blob/main/sources/css/details.component.css


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02.19. Componente 'details' (.html): frontend/src/app/components/details/details.component.html -----------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

              01      <article>
              02          <img
              03              class="listing-photo"
              04              [src]="housingLocation?.photo"
              05              alt="Exterior photo of {{ housingLocation?.name }}"
              06              crossorigin
              07          />
              08          <section class="listing-description">
              09              <h2 class="listing-heading">{{ housingLocation?.name }}</h2>
              10              <p class="listing-location">{{ housingLocation?.city }}, {{ housingLocation?.state }}</p>
              11          </section>
              12          <section class="listing-features">
              13              <h2 class="section-heading">About this housing location</h2>
              14              <ul>
              15                  <li>Units available: {{ housingLocation?.availableUnits }}</li>
              16                  <li>Does this location have hifi: {{ housingLocation?.wifi }}</li>
              17                  <li>Does this location have laundry: {{ housingLocation?.laundry }}</li>
              18              </ul>
              19          </section>
              20          <section>
              21              <h2>Apply now to live here</h2>
              22              <form [formGroup]="formAngular" (submit)="onSubmit()">
              23                  <label for="first-name">First Name</label>
              24                  <input type="text" id="first-name" formControlName="firstName" />
              25                  <label for="last-name">Last Name</label>
              26                  <input type="text" id="last-name" formControlName="lastName" />
              27                  <label for="email">Email</label>
              28                  <input type="text" id="email" formControlName="email" />
              29                  <button type="submit" class="primary">Apply now</button>
              30              </form>
              31          </section>
              32      </article>


|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||------------------------------------------------------------------------------ ANEXOS ------------------------------------------------------------------------------|||
||| ------------------------------------------------------------------------- TENER EN CUENTA -------------------------------------------------------------------------|||
|||--------------------------------------------------------------------------------------------------------------------------------------------------------------------|||
|||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|||

|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- AX_01.  Subir el proyecto a un repositorio 'Github': ----------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

            Para evitar confusiones y seguir los pasos correctamente, la carpeta raíz del proyecto se llamará 'angular'.
            
            01. Verificar que no haya una cuenta de 'Github' asociada al computador, para ello, debe abrir el 'Panel de Control', dar clic en 'Cuentas 
                de usuario / Administrar credenciales de Windows'. Si hay una cuenta asociada 'git:https://github.com', dar clic sobre la cuenta y clic
                sobre la opción 'Quitar'. 
            
            NOTA:   ⦿   De no funcionar este método porque no tiene acceso al Panel de control, pruebe abriendo el 'Windows PowerShell' y digite el 
                         siguiente comando:

                         PS C:\..\..> echo "protocol=https`nhost=github.com`n" | git credential-manager erase
            
            02. Abrir su cuenta de 'Github' y en la parte superior derecha, dar clic al 'Nombre de su cuenta / Your Repositories'. Dar clic a 'New'.
                En el control de texto 'Repository name', escribir el nombre de la carpeta raíz de su proyecto (ejemplo, 'angular'. La carpeta raíz no debe 
                tener espacios, ni caracteres compuesto, ni caracteres especiales) y dar clic en 'Create Repository'.

            NOTA:   ⦿   Si no tiene cuenta en 'GitHub', debe crear una.
            
            03. Clic derecho sobre la carpeta raíz (ejemplo, 'angular') y seleccionar la opción 'Open Git Bash here'; si no se 
                encuentra la opción, hay que instalar 'Git'.
            
            04. En el 'Git Bash' escribir lo siguiente:

                    $ git config --global user.name "nombre de su cuenta"
                    $ git config --global user.email "correo de su cuenta"

                    $ git init
                    $ git branch -M main
                    $ git remote add origin https://github.com/SenaProfeAlbeiro/angular.git
                    $ git add .
                    $ git commit -m "Subiendo Proyecto"
                    $ git push -u origin main

            05. Va a aparecer una ventana denominada 'Connect to Github', dar clic en la opción 'Sign in with your browser', dar clic en 'Authentication 
                Succeeded'. Verificar que se haya abierto en el navegador que tiene abierta la cuenta, de lo contrario hay que escribir nuevamente las
                credenciales de 'Github'. En el 'Git Bash' debe aparecer texto similar al siguiente:

                    Enumerating objects: 3, done.
                    Counting objects: 100% (3/3), done.
                    Writing objects: 100% (3/3), 226 bytes | 226.00 KiB/s, done.
                    Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
                    To https://github.com/SenaProfeAlbeiro/ej01_n_capas_php_sql_html.git
                    * [new branch]      main -> main
                    branch 'main' set up to track 'origin/main'.
            
            06. Actualizar la ventana del navegador donde se encuentra abierta su cuenta de 'Github'
            
            07. Para actualizar la información del proyecto en 'Github', en el 'Git bash' escribir los siguientes comandos:

                    $ git add .
                    $ git commit -m "Comentario del cambio"
                    $ git push

|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- AX_02.  Clonar un proyecto 'Github': --------------------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Abrir su cuenta de 'Github' y en la parte superior derecha, dar clic al 'Nombre de su cuenta / Your Repositories'. 

            02. Dar click al proyecto que desea clonar, en el caso del ejemplo es 'angular'.

            03. Dar click a la opción '<> Code / Copy url to clipboard'.

            04. Ir a una carpeta de Windows, por ejemplo, en el 'Escritorio' (en el caso del ejemplo, 'angular').

            05. Click derecho sobre el área de trabajo y seleccionar la opción 'Open Git Bash here'; si no se encuentra la opción, hay que instalar 
                'Git'.
 
            06. En el 'Git Bash' pegar el repositorio clonado de 'Github' con 'CTRL + INSERT', quedando como sigue:

                    $ git clone https://github.com/SenaProfeAlbeiro/angular.git

            NOTA:   ⦿   Si el proyecto ya se encuentra en el computador, puede utilizar el siguiente comando para actualizar la información:
                    
                    $ git pull
            
            07. Abrir el proyecto en Visual Studio Code.


|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- AX_03. Puesta en Marcha del Proyecto: -------------------------------------------------------------------------------------------------------------------------------|
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

            01. Garantizar el ambiente de desarrollo (Ver apartado 'CONFIGURACIÓN ENTORNO').